# Docker Compose for Production Environment
version: '3.8'

services:
  db-prod:
    image: postgres:15-alpine
    container_name: yanotela-db-prod
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - yanotela-prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-prod:
    image: redis:7-alpine
    container_name: yanotela-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_prod_data:/data
    ports:
      - "6379:6379"
    networks:
      - yanotela-prod
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend-prod:
    image: ${DOCKER_USERNAME:-yourusername}/yanotela-backend:${IMAGE_TAG:-latest}
    container_name: yanotela-backend-prod
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db-prod:5432/${DB_NAME}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis-prod:6379
      - SESSION_SECRET=${SESSION_SECRET}
      - MAIL_SERVICE=${MAIL_SERVICE}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    env_file:
      - .env.prod
    depends_on:
      db-prod:
        condition: service_healthy
      redis-prod:
        condition: service_healthy
    networks:
      - yanotela-prod
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "npx prisma migrate deploy && npm start"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend-prod:
    image: ${DOCKER_USERNAME:-yourusername}/yanotela-frontend:${IMAGE_TAG:-latest}
    container_name: yanotela-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      # CRITICAL FIX: Use backend container name for internal communication
      - NEXT_PUBLIC_API_URL=http://${EC2_HOST:-localhost}:3001
    env_file:
      - .env.prod
    depends_on:
      - backend-prod
    networks:
      - yanotela-prod
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  yanotela-prod:
    driver: bridge
