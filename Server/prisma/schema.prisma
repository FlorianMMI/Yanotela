generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id              Int         @id @default(autoincrement())
  notes           Note[]      
  modifiedNotes   Note[]      @relation("NoteModifier")
  folders         Folder[]  
  notesFolders    NoteDossier[] 
  permissions     Permission[]
  pseudo          String      @unique
  prenom          String
  password        String
  nom             String
  email           String      @unique
  token           String      @unique
  is_verified     Boolean     @default(false)
  deleted_at      DateTime?               

}

model Note {
  id              String         @id 
  Titre           String      
  Content         String
  authorId        Int
  author          User        @relation(fields: [authorId], references: [id])
  modifierId      Int?
  modifier        User?       @relation("NoteModifier", fields: [modifierId], references: [id])
  permissions     Permission[]
  notesFolders    NoteDossier[]
  ModifiedAt       DateTime    @default(now())
  
}

model Permission {
  noteId String   @map("id_note")
  userId Int      @map("id_user")
  role   Int
  isAccepted Boolean @default(false)

  note   Note   @relation(fields: [noteId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([noteId, userId])
  
}

model Folder {
  id          String    @id @default(uuid())
  Nom         String
  Description String?
  CouleurTag  String    @default("#D4AF37")
  authorId    Int
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  notesFolders NoteDossier[]
  CreatedAt   DateTime  @default(now())
  ModifiedAt  DateTime  @updatedAt
  deletedAt   DateTime?
  
  @@map("Dossier")
}

model NoteDossier {
  id         String   @id @default(uuid())
  noteId     String   @map("note_id")
  dossierId  String   @map("dossier_id") 
  userId     Int      @map("user_id")
  CreatedAt  DateTime @default(now())
  
  note       Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
  dossier    Dossier  @relation(fields: [dossierId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([noteId, userId])
  @@map("note_dossier")
}

