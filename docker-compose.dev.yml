# Docker Compose pour l'environnement Development

services:
  db-dev:
    image: postgres:15-alpine
    container_name: yanotela-db-dev
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - yanotela-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-dev:
    image: redis:7-alpine
    container_name: yanotela-redis-dev
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - yanotela-dev
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend-dev:
    image: ${DOCKER_USERNAME:-jefee}/yanotela-backend-dev:${IMAGE_TAG:-develop}
    container_name: yanotela-backend-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db-dev:5432/${DB_NAME}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis-dev:6379
      - SESSION_SECRET=${SESSION_SECRET}
      - MAIL_SERVICE=${MAIL_SERVICE}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    env_file:
      - .env.dev
    depends_on:
      db-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    networks:
      - yanotela-dev
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "npx prisma migrate deploy && npm start"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend-dev:
    image: ${DOCKER_USERNAME:-jefee}/yanotela-frontend-dev:${IMAGE_TAG:-develop}
    container_name: yanotela-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - NEXT_PUBLIC_API_URL=https://yanotela.fr/api
    env_file:
      - .env.dev
    depends_on:
      - backend-dev
    networks:
      - yanotela-dev
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #     - /etc/letsencrypt:/etc/letsencrypt
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - yanotela-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  yanotela-dev:
    driver: bridge
