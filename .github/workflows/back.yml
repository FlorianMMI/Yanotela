name: Node.js CI/CD on Amazon Linux

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Export secrets to env
        run: |
          echo "Exporting secrets as environment variables..."
          export SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}"
          export REMOTE_HOST="${{ secrets.REMOTE_HOST }}"
          export REMOTE_USER="${{ secrets.REMOTE_USER }}"
          echo "✅ Secrets exported"
          echo "SSH_PRIVATE_KEY=$SSH_PRIVATE_KEY" >> $GITHUB_ENV
          echo "REMOTE_HOST=$REMOTE_HOST" >> $GITHUB_ENV
          echo "REMOTE_USER=$REMOTE_USER" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install
        working-directory: Server

      - name: Debug secrets
        run: |
          if [ -z "$SSH_PRIVATE_KEY" ]; then
            echo "❌ SSH_PRIVATE_KEY is empty"
          else
            echo "✅ SSH_PRIVATE_KEY is set"
          fi

      - name: Write SSH key to file
        run: |
          echo "$SSH_PRIVATE_KEY" > my_key.pem
          chmod 600 my_key.pem

      - name: Deploy to AWS EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key_path: my_key.pem
          source: "./"
          target: "/var/www/Yanotela"

      - name: Restart PM2 application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key_path: my_key.pem
          script: |
            cd /var/www/Yanotela
            pm2 reload all

      - name: Remove temporary SSH key and unset secrets
        run: |
          rm -f my_key.pem
          unset SSH_PRIVATE_KEY
          unset REMOTE_HOST
          unset REMOTE_USER
